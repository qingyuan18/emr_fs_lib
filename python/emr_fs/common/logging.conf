#coding: utf-8
#logging配置文件

#定义logger模块，root是父类，必须存在，其他的自定义
#logging.getLogger(name) 相当于向loggging模块注册了一种日志打印
#如果name为loggers里面keys的值，则调用对应的配置，如果name没有则调用默认（root)的配置
#name 中用点 . 表示继承关系
#可以有多个，以逗号隔开
#####################################################################################################
#实现logger对应的配置信息
#            必须是 logger_name  name为loggers中key的值
#level       日志级别，级别有 DEBUG,INFO,WARNING,ERROR,CRITICAL
#handlers    日志处理器，可以有多个 以逗号隔开
#qualname    logger的名称，通过logging.getLogger(name)获取，这里的name便是qualname
#            如果获取的logger 名称不存在，则调用默认（root)logger
#propagate   是否继承符类的配置信息，0：否 1：是
#如果这个属性是True也就是1，那么这个logger的输出会朝着上一级logger传播；会产生两个记录
#所以需要把其他logger的propagate属性设置为False

[loggers]
keys=root,console,file

[logger_root]
level=DEBUG
handlers=consoleHandler
formatter=pretty

[logger_console]
level=DEBUG
handlers=consoleHandler
formatter=pretty
qualname=console

[logger_file]
level=DEBUG
handlers=fileHandler
formatter=pretty
qualname=file

#######################################################################
#handlers的具体配置实现
#必须是 handler_name  name为handlers中key的值
#class为logging包里面的handler处理器
#formatter 日志输入格式
#args handler相关参数

[handlers]
keys=consoleHandler,fileHandler

[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=pretty
args=(sys.stdout,)

[handler_fileHandler]
class=FileHandler
level=INFO
formatter=pretty
args=("./emr_fs_lib.log","a")

#######################################################################
#日志输出格式化实现
#datefmt 日期格式 对应asctime


[formatters]
keys=pretty

[formatter_pretty]
format=[%(asctime)s][%(filename)s][line:%(lineno)d][%(levelname)s] %(message)s
datefmt=%a, %d %b %Y %H:%M:%S
